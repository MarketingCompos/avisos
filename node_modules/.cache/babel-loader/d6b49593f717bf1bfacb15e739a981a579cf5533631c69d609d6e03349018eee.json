{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\F\\xE1bio Brasileiro\\\\Desktop\\\\avisoscompos\\\\src\\\\Components\\\\Form\\\\index.jsx\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [formData, setFormData] = useState({\n  url: ''\n});\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  // Converte o objeto em uma string JSON\n  const jsonData = JSON.stringify(formData);\n\n  // Armazena a string JSON na sessionStorage\n  sessionStorage.setItem('data', jsonData);\n\n  // Limpa o campo de entrada do formulário\n  setFormData({\n    url: ''\n  });\n};\nconst handleChange = event => {\n  const {\n    name,\n    value\n  } = event.target;\n  setFormData(prevState => ({\n    ...prevState,\n    [name]: value\n  }));\n};\nfunction BasicExample() {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"url\",\n      id: \"url\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"url\",\n        placeholder: \"Digite a URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Salvar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["Button","Form","jsxDEV","_jsxDEV","formData","setFormData","useState","url","handleSubmit","event","preventDefault","jsonData","JSON","stringify","sessionStorage","setItem","handleChange","name","value","target","prevState","BasicExample","className","children","Group","controlId","id","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","Text","variant","_c","$RefreshReg$"],"sources":["C:/Users/Fábio Brasileiro/Desktop/avisoscompos/src/Components/Form/index.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\n  \r\nconst [formData, setFormData] = useState({ url: '' });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Converte o objeto em uma string JSON\r\n    const jsonData = JSON.stringify(formData);\r\n\r\n    // Armazena a string JSON na sessionStorage\r\n    sessionStorage.setItem('data', jsonData);\r\n\r\n    // Limpa o campo de entrada do formulário\r\n    setFormData({ url: '' });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\nfunction BasicExample() {\r\n  \r\n  return (\r\n    \r\n    <Form className='form'>\r\n      <Form.Group className=\"mb-3\" controlId=\"url\" id='url'>\r\n        <Form.Label>URL</Form.Label>\r\n        <Form.Control type=\"url\" placeholder=\"Digite a URL\" />\r\n        <Form.Text className=\"text-muted\">\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n     \r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Salvar\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default BasicExample;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC;AAEnD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9BA,KAAK,CAACC,cAAc,EAAE;;EAEtB;EACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACT,QAAQ,CAAC;;EAEzC;EACAU,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEJ,QAAQ,CAAC;;EAExC;EACAN,WAAW,CAAC;IAAEE,GAAG,EAAE;EAAG,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMS,YAAY,GAAIP,KAAK,IAAK;EAC9B,MAAM;IAAEQ,IAAI;IAAEC;EAAM,CAAC,GAAGT,KAAK,CAACU,MAAM;EACpCd,WAAW,CAAEe,SAAS,KAAM;IAAE,GAAGA,SAAS;IAAE,CAACH,IAAI,GAAGC;EAAM,CAAC,CAAC,CAAC;AAC/D,CAAC;AACH,SAASG,YAAYA,CAAA,EAAG;EAEtB,oBAEElB,OAAA,CAACF,IAAI;IAACqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBpB,OAAA,CAACF,IAAI,CAACuB,KAAK;MAACF,SAAS,EAAC,MAAM;MAACG,SAAS,EAAC,KAAK;MAACC,EAAE,EAAC,KAAK;MAAAH,QAAA,gBACnDpB,OAAA,CAACF,IAAI,CAAC0B,KAAK;QAAAJ,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC5B5B,OAAA,CAACF,IAAI,CAAC+B,OAAO;QAACC,IAAI,EAAC,KAAK;QAACC,WAAW,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtD5B,OAAA,CAACF,IAAI,CAACkC,IAAI;QAACb,SAAS,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACrB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eAGb5B,OAAA,CAACH,MAAM;MAACoC,OAAO,EAAC,SAAS;MAACH,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAExC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX;AAACM,EAAA,GAlBQhB,YAAY;AAoBrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}